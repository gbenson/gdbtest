#!/bin/sh

if [ -z "$STY" ]; then
    echo 1>&2 "usage: screen -S gdbtest"
    echo 1>&2 " then: $0 2>&1 | tee build.log"
    exit 1
fi
clang=$(which clang 2>/dev/null)
if [ -z "$clang" ]; then
    echo 1>&2 "$(basename $0): clang: command not found."
    exit 1
fi
if echo "$clang" | grep -q /usr; then
    echo 1>&2 "$(basename $0): $clang: refusing to use system clang."
    exit 1
fi
unset clang

set -ex

topdir=$HOME
N=8

cd $topdir
outdir=$(date --iso-8601=date)
mkdir $outdir build  # Or bomb, if either exists.
logfile=$(echo $outdir | sed s/-//g)-1

rpm -qa | sort > $topdir/$outdir/rpm-qa.sort

unset CC_FOR_TARGET
unset CX_FOR_TARGET
crowbar="$topdir/gdbtest/crowbar"
[ -x $crowbar ]
$crowbar && exit 1
export RUNTESTFLAGS="CC_FOR_TARGET=$crowbar CXX_FOR_TARGET=$crowbar"

cd build
(CFLAGS="-g" \
 CXXFLAGS="-g" \
   time ../src/configure \
     --with-system-readline \
     --with-separate-debug-dir=/usr/lib/debug \
     --with-gdb-datadir=$topdir/build/gdb/data-directory \
     --disable-binutils \
     --disable-gas \
     --disable-gold \
     --disable-gprof \
     --disable-intl \
     --disable-ld \
     --disable-sim \
  && time make -j$N
) 2>&1 | tee $topdir/$outdir/build.log
make -C gdb/testsuite site.exp
sed -i 's,build/gdb/testsuite/\.\./\.\./\.\./,,' gdb/testsuite/site.exp
cp -a . ../$outdir/with-clang

time make -C gdb/testsuite -k -j$N check-parallel \
  RUNTESTFLAGS="CC_FOR_TARGET=gcc CXX_FOR_TARGET=g++" \
  2>&1 | tee $topdir/$outdir/gcc-make-check.log
for ext in sum log; do
  cp -a gdb/testsuite/gdb.$ext \
    $topdir/gdbtest/back2back/baremetal-gcc-$logfile.$ext
done

cd ..
mv build $outdir/with-gcc
mv $outdir/with-clang build
cd build

time make -C gdb/testsuite -k -j$N check-parallel \
  RUNTESTFLAGS="CC_FOR_TARGET=clang CXX_FOR_TARGET=clang++" \
  2>&1 | tee $topdir/$outdir/clang-make-check.log
for ext in sum log; do
  cp -a gdb/testsuite/gdb.$ext \
    $topdir/gdbtest/back2back/baremetal-clang-$logfile.$ext
done

cp -a . ../$outdir/with-clang
chmod -R -w ../$outdir
